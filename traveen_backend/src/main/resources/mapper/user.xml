<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.user.model.mapper.UserMapper">
	<resultMap type="user" id="user">
		<result column="user_id" property="userId"/>
		<result column="user_pwd" property="userPwd"/>
		<result column="user_name" property="userName"/>
		<result column="email_id" property="emailId"/>
		<result column="email_domain" property="emailDomain"/>
		<result column="mobile" property="mobile"/>
		<result column="salt" property="salt"/>
		<result column="join_date" property="joinDate"/>
		<result column="position" property="position"/>
	</resultMap>

	<!-- 아이디 중복 체크 -->
	<select id="idCheck" parameterType="String" resultType="int">
		select count(user_id)
		from users
		where user_id = #{userId}
	</select>

	<!-- 로그인 -->
	<select id="login" parameterType="map" resultMap="user">
		select user_id, user_pwd, user_name, idx
		from users
		where user_id = #{userId} and user_pwd = #{userPwd}
	</select>
	
	<!-- 회원가입 -->
	<insert id="join" parameterType="map">
		insert into users (user_id, user_pwd, user_name, email_id, email_domain, mobile, salt, join_date, position, email_code)
		values (#{userId}, #{userPwd}, #{userName}, #{emailId}, #{emailDomain}, #{mobile}, #{salt}, now(), 'G', '1234')
	</insert>
	
	<!-- 아이디로 정보 가져오기 -->
	<select id="getUser" parameterType="string" resultMap="user">
		select user_id, user_pwd, user_name, email_id, email_domain, mobile, salt, join_date, position
		from users
		where user_id = #{userId}
	</select>
	
	<!-- 회원정보수정 -->
	<update id="updateUser" parameterType="user">
		update users
		<trim prefix="set" suffixOverrides=",">
			<if test="userName != null">user_name = #{userName},</if>
			<if test="emailId != null">email_id = #{emailId},</if>
			<if test="emailDomain != null">email_domain = #{emailDomain},</if>
			<if test="mobile != null">mobile = #{mobile},</if>
		</trim>
		where user_id = #{userId}
	</update>

	<!-- 비밀번호 체크 -->
	<select id="pwdCheck" parameterType="map" resultType="int">
		select count(user_id)
		from users
		where user_id = #{userId} and user_pwd = #{userPwd}
	</select>

	<!-- 비밀번호 수정 -->
	<update id="updatePwd" parameterType="map">
		update users
		<trim prefix="set" suffixOverrides=",">
			<if test="newPwd != null">user_pwd = #{userPwd}, salt = #{salt}</if>
		</trim>
		where user_id = #{userId}
	</update>
	
	<!-- 회원탈퇴 -->
	<delete id="deleteMember" parameterType="String">
		delete from members
		where user_id = #{userId}
	</delete>
	
</mapper>